{"@timestamp":"2025-06-23T01:50:09.419601186Z","level":"INFO","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.1.Final"}
{"@timestamp":"2025-06-23T01:50:09.543962139Z","level":"INFO","logger_name":"com.example.Triple_clone.TripleCloneApplication","message":"Starting TripleCloneApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app.jar started by root in /)"}
{"@timestamp":"2025-06-23T01:50:09.546325549Z","level":"INFO","logger_name":"com.example.Triple_clone.TripleCloneApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-06-23T01:50:11.672851777Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-06-23T01:50:11.67515544Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-06-23T01:50:11.717089673Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-06-23T01:50:12.956960033Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-06-23T01:50:12.959907686Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-06-23T01:50:13.884760861Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.RedisAccommodationRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository"}
{"@timestamp":"2025-06-23T01:50:14.02425034Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 1054 ms. Found 10 JPA repository interfaces."}
{"@timestamp":"2025-06-23T01:50:14.058293298Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-06-23T01:50:14.059344281Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-06-23T01:50:14.075781929Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.AccommodationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.079407643Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.AdminNotificationSettingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.087519774Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.DetailPlanRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.088689778Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.090893587Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.092373292Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.NotificationStatusRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.093717397Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.PlanRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.096096406Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.RecommendationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.099287319Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.ReportRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.100780224Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.Triple_clone.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-06-23T01:50:14.112560769Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 50 ms. Found 1 Redis repository interfaces."}
{"@timestamp":"2025-06-23T01:50:18.041173565Z","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 8080 (http)"}
{"@timestamp":"2025-06-23T01:50:18.069895274Z","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8080\"]"}
{"@timestamp":"2025-06-23T01:50:18.079726412Z","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-06-23T01:50:18.080597915Z","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.15]"}
{"@timestamp":"2025-06-23T01:50:18.377357948Z","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-06-23T01:50:18.384359375Z","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 8709 ms"}
{"@timestamp":"2025-06-23T01:50:20.909149303Z","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-06-23T01:50:21.110988612Z","level":"INFO","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.2.13.Final"}
{"@timestamp":"2025-06-23T01:50:21.117361031Z","level":"INFO","logger_name":"org.hibernate.cfg.Environment","message":"HHH000406: Using bytecode reflection optimizer"}
{"@timestamp":"2025-06-23T01:50:22.268880407Z","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-06-23T01:50:22.315150947Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-06-23T01:50:22.642889136Z","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e76b097"}
{"@timestamp":"2025-06-23T01:50:22.646746347Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-06-23T01:50:22.758176284Z","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2025-06-23T01:50:25.379648896Z","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-06-23T01:50:25.638759378Z","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-23T01:50:29.920699387Z","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-06-23T01:50:31.437537703Z","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 14 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2025-06-23T01:50:31.601193891Z","level":"INFO","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c048b30, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@309cf657, org.springframework.security.web.context.SecurityContextHolderFilter@1a4cbcc6, org.springframework.security.web.header.HeaderWriterFilter@13662609, org.springframework.security.web.authentication.logout.LogoutFilter@57bd9c2b, com.example.Triple_clone.web.filter.JwtAuthFilter@4d4c4b14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56402642, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5048d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49925d21, org.springframework.security.web.session.SessionManagementFilter@45d46254, org.springframework.security.web.access.ExceptionTranslationFilter@736788b, org.springframework.security.web.access.intercept.AuthorizationFilter@49f2646]"}
{"@timestamp":"2025-06-23T01:50:33.311451783Z","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8080\"]"}
{"@timestamp":"2025-06-23T01:50:33.381622764Z","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port(s): 8080 (http) with context path ''"}
{"@timestamp":"2025-06-23T01:50:33.458682812Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = latest\n\tbootstrap.servers = [kafka:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-email-retry-group-1\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = email-retry-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n"}
{"@timestamp":"2025-06-23T01:50:33.810170522Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka version: 3.4.1"}
{"@timestamp":"2025-06-23T01:50:33.811246832Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka commitId: 8a516edc2755df89"}
{"@timestamp":"2025-06-23T01:50:33.811982239Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka startTimeMs: 1750643433804"}
{"@timestamp":"2025-06-23T01:50:33.893053326Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.KafkaConsumer","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Subscribed to topic(s): email-retry-topic"}
{"@timestamp":"2025-06-23T01:50:33.91198441Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = latest\n\tbootstrap.servers = [kafka:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-slack-retry-group-2\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = slack-retry-group\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n"}
{"@timestamp":"2025-06-23T01:50:33.925717643Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka version: 3.4.1"}
{"@timestamp":"2025-06-23T01:50:33.926284448Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka commitId: 8a516edc2755df89"}
{"@timestamp":"2025-06-23T01:50:33.926827554Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"Kafka startTimeMs: 1750643433925"}
{"@timestamp":"2025-06-23T01:50:33.937933761Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.KafkaConsumer","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Subscribed to topic(s): slack-retry-topic"}
{"@timestamp":"2025-06-23T01:50:34.009117252Z","level":"INFO","logger_name":"com.example.Triple_clone.TripleCloneApplication","message":"Started TripleCloneApplication in 26.055 seconds (process running for 27.525)"}
{"@timestamp":"2025-06-23T01:50:34.027994835Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ Start Batch process = 숙소 정보 크롤링","traceId":"2b5b0797-d83e-49fa-b044-3ed18d2ea8df","uri":"scheduled::ScraperBatchService.scrapeAllLocations()","email":"system"}
{"@timestamp":"2025-06-23T01:50:35.039127332Z","level":"INFO","logger_name":"org.apache.kafka.clients.Metadata","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Resetting the last seen epoch of partition email-retry-topic-0 to 0 since the associated topicId changed from null to FsvxOxjnSH2ba5JeEwBrhg"}
{"@timestamp":"2025-06-23T01:50:35.039139532Z","level":"INFO","logger_name":"org.apache.kafka.clients.Metadata","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Resetting the last seen epoch of partition slack-retry-topic-0 to 0 since the associated topicId changed from null to zRstp4cNS3ms67MU6CByjg"}
{"@timestamp":"2025-06-23T01:50:35.04420996Z","level":"INFO","logger_name":"org.apache.kafka.clients.Metadata","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Cluster ID: leBaHx1DR-KdIYKZsUtqSQ"}
{"@timestamp":"2025-06-23T01:50:35.044110959Z","level":"INFO","logger_name":"org.apache.kafka.clients.Metadata","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Cluster ID: leBaHx1DR-KdIYKZsUtqSQ"}
{"@timestamp":"2025-06-23T01:50:35.047527178Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)"}
{"@timestamp":"2025-06-23T01:50:35.053682013Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)"}
{"@timestamp":"2025-06-23T01:50:35.068182793Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] (Re-)joining group"}
{"@timestamp":"2025-06-23T01:50:35.071901714Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] (Re-)joining group"}
{"@timestamp":"2025-06-23T01:50:35.152487462Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Request joining group due to: need to re-join with the given member-id: consumer-slack-retry-group-2-6d8cf39a-e056-4f7b-9c92-14c245e328a3"}
{"@timestamp":"2025-06-23T01:50:35.15394977Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)"}
{"@timestamp":"2025-06-23T01:50:35.154708674Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Request joining group due to: need to re-join with the given member-id: consumer-email-retry-group-1-52432dc7-e327-4510-a848-793bcd7ddb22"}
{"@timestamp":"2025-06-23T01:50:35.154798275Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] (Re-)joining group"}
{"@timestamp":"2025-06-23T01:50:35.155680279Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)"}
{"@timestamp":"2025-06-23T01:50:35.157022387Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] (Re-)joining group"}
{"@timestamp":"2025-06-23T01:50:36.168454709Z","level":"INFO","logger_name":"com.example.Triple_clone.service.monitoring.MetricToInfluxJob","message":"✅ InfluxDB write 성공","traceId":"1c24ffca-140b-4d88-9aa4-e5a7c1d49518","uri":"scheduled::MetricToInfluxJob.reportMetrics()","email":"system"}
{"@timestamp":"2025-06-23T01:50:36.290324786Z","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-23T01:50:36.291489893Z","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2025-06-23T01:50:36.295302614Z","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 3 ms"}
{"@timestamp":"2025-06-23T01:50:38.185958123Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-email-retry-group-1-52432dc7-e327-4510-a848-793bcd7ddb22', protocol='range'}"}
{"@timestamp":"2025-06-23T01:50:38.188615837Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Finished assignment for group at generation 16: {consumer-email-retry-group-1-52432dc7-e327-4510-a848-793bcd7ddb22=Assignment(partitions=[email-retry-topic-0])}"}
{"@timestamp":"2025-06-23T01:50:38.188781338Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-slack-retry-group-2-6d8cf39a-e056-4f7b-9c92-14c245e328a3', protocol='range'}"}
{"@timestamp":"2025-06-23T01:50:38.189481142Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Finished assignment for group at generation 16: {consumer-slack-retry-group-2-6d8cf39a-e056-4f7b-9c92-14c245e328a3=Assignment(partitions=[slack-retry-topic-0])}"}
{"@timestamp":"2025-06-23T01:50:38.258487926Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-slack-retry-group-2-6d8cf39a-e056-4f7b-9c92-14c245e328a3', protocol='range'}"}
{"@timestamp":"2025-06-23T01:50:38.258487626Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-email-retry-group-1-52432dc7-e327-4510-a848-793bcd7ddb22', protocol='range'}"}
{"@timestamp":"2025-06-23T01:50:38.259569932Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Notifying assignor about the new Assignment(partitions=[slack-retry-topic-0])"}
{"@timestamp":"2025-06-23T01:50:38.259614332Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Notifying assignor about the new Assignment(partitions=[email-retry-topic-0])"}
{"@timestamp":"2025-06-23T01:50:38.263140652Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Adding newly assigned partitions: email-retry-topic-0"}
{"@timestamp":"2025-06-23T01:50:38.263140652Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Adding newly assigned partitions: slack-retry-topic-0"}
{"@timestamp":"2025-06-23T01:50:38.30058316Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Setting offset for partition email-retry-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}"}
{"@timestamp":"2025-06-23T01:50:38.300077457Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Setting offset for partition slack-retry-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}"}
{"@timestamp":"2025-06-23T01:50:38.404058335Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"email-retry-group: partitions assigned: [email-retry-topic-0]"}
{"@timestamp":"2025-06-23T01:50:38.404058235Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"slack-retry-group: partitions assigned: [slack-retry-topic-0]"}
{"@timestamp":"2025-06-23T01:50:50.503372271Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 서울"}
{"@timestamp":"2025-06-23T01:50:50.503835072Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 인천"}
{"@timestamp":"2025-06-23T01:50:50.503524371Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 대구"}
{"@timestamp":"2025-06-23T01:50:50.503524471Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 부산"}
{"@timestamp":"2025-06-23T01:50:50.509670297Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 대전"}
{"@timestamp":"2025-06-23T01:51:03.004477421Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 안산"}
{"@timestamp":"2025-06-23T01:51:03.00818354Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 성남"}
{"@timestamp":"2025-06-23T01:51:03.190158755Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 광주"}
{"@timestamp":"2025-06-23T01:51:04.331040392Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 광명"}
{"@timestamp":"2025-06-23T01:51:04.397481026Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 의정부"}
{"@timestamp":"2025-06-23T01:51:14.169192656Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 남양주"}
{"@timestamp":"2025-06-23T01:51:14.173778591Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 고양"}
{"@timestamp":"2025-06-23T01:51:15.495174219Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 춘천"}
{"@timestamp":"2025-06-23T01:51:15.525448483Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 안성"}
{"@timestamp":"2025-06-23T01:51:15.619017806Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 전주"}
{"@timestamp":"2025-06-23T01:51:25.152639152Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 안동"}
{"@timestamp":"2025-06-23T01:51:26.334792208Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 순천"}
{"@timestamp":"2025-06-23T01:51:26.726984546Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 김해"}
{"@timestamp":"2025-06-23T01:51:26.760729107Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 광양"}
{"@timestamp":"2025-06-23T01:51:26.813055412Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 울산"}
{"@timestamp":"2025-06-23T01:51:35.944269321Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 청주"}
{"@timestamp":"2025-06-23T01:51:37.290197703Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 서귀포"}
{"@timestamp":"2025-06-23T01:51:37.890620774Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 포항"}
{"@timestamp":"2025-06-23T01:51:37.93828071Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 평택"}
{"@timestamp":"2025-06-23T01:51:37.993028255Z","level":"INFO","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"✅ 크롤링 성공: 안양"}
{"@timestamp":"2025-06-23T01:51:39.447957273Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Revoke previously assigned partitions slack-retry-topic-0"}
{"@timestamp":"2025-06-23T01:51:39.447957373Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Revoke previously assigned partitions email-retry-topic-0"}
{"@timestamp":"2025-06-23T01:51:39.449183607Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"slack-retry-group: partitions revoked: [slack-retry-topic-0]"}
{"@timestamp":"2025-06-23T01:51:39.449183707Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"email-retry-group: partitions revoked: [email-retry-topic-0]"}
{"@timestamp":"2025-06-23T01:51:39.450651228Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Member consumer-email-retry-group-1-52432dc7-e327-4510-a848-793bcd7ddb22 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics"}
{"@timestamp":"2025-06-23T01:51:39.450651128Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Member consumer-slack-retry-group-2-6d8cf39a-e056-4f7b-9c92-14c245e328a3 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics"}
{"@timestamp":"2025-06-23T01:51:39.452368136Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Resetting generation and member id due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.452736217Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Resetting generation and member id due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.453721464Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Request joining group due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.453912054Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Request joining group due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.461172965Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.KafkaConsumer","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Unsubscribed all topics or patterns and assigned partitions"}
{"@timestamp":"2025-06-23T01:51:39.461646839Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.KafkaConsumer","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Unsubscribed all topics or patterns and assigned partitions"}
{"@timestamp":"2025-06-23T01:51:39.468645564Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Resetting generation and member id due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.469357726Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-slack-retry-group-2, groupId=slack-retry-group] Request joining group due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.475558294Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Resetting generation and member id due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.477381696Z","level":"INFO","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","message":"[Consumer clientId=consumer-email-retry-group-1, groupId=email-retry-group] Request joining group due to: consumer pro-actively leaving the group"}
{"@timestamp":"2025-06-23T01:51:39.51445901Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Metrics scheduler closed"}
{"@timestamp":"2025-06-23T01:51:39.515229269Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter"}
{"@timestamp":"2025-06-23T01:51:39.516222915Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Metrics reporters closed"}
{"@timestamp":"2025-06-23T01:51:39.517140166Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Metrics scheduler closed"}
{"@timestamp":"2025-06-23T01:51:39.518256606Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter"}
{"@timestamp":"2025-06-23T01:51:39.523640118Z","level":"INFO","logger_name":"org.apache.kafka.common.metrics.Metrics","message":"Metrics reporters closed"}
{"@timestamp":"2025-06-23T01:51:39.536418533Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"App info kafka.consumer for consumer-slack-retry-group-2 unregistered"}
{"@timestamp":"2025-06-23T01:51:39.538825204Z","level":"INFO","logger_name":"org.apache.kafka.common.utils.AppInfoParser","message":"App info kafka.consumer for consumer-email-retry-group-1 unregistered"}
{"@timestamp":"2025-06-23T01:51:39.54021143Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"email-retry-group: Consumer stopped"}
{"@timestamp":"2025-06-23T01:51:39.542167625Z","level":"INFO","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","message":"slack-retry-group: Consumer stopped"}
{"@timestamp":"2025-06-23T01:51:39.752882936Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[c3b5c9ba-1, L:/172.19.0.13:39574 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.752880936Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[6bca4028-1, L:/172.19.0.13:39842 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.752884736Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[da1f8f49-1, L:/172.19.0.13:39432 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.771203455Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 진주"}
{"@timestamp":"2025-06-23T01:51:39.771226353Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 용인"}
{"@timestamp":"2025-06-23T01:51:39.771241253Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 수원"}
{"@timestamp":"2025-06-23T01:51:39.779281522Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[fb497b77-1, L:/172.19.0.13:39846 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.779840392Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[5a8b0aa2-1, L:/172.19.0.13:39450 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.78024237Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[ca0f1b95-1, L:/172.19.0.13:39588 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.780856637Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 강릉"}
{"@timestamp":"2025-06-23T01:51:39.78062665Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 부천"}
{"@timestamp":"2025-06-23T01:51:39.78062965Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 속초"}
{"@timestamp":"2025-06-23T01:51:39.782614443Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[7a40b0ac-1, L:/172.19.0.13:39620 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.783156014Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[816a95a9-1, L:/172.19.0.13:39468 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.783476297Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 여수"}
{"@timestamp":"2025-06-23T01:51:39.784184159Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 김포"}
{"@timestamp":"2025-06-23T01:51:39.78453274Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[80dc454e-1, L:/172.19.0.13:39638 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.785161107Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[3c798384-1, L:/172.19.0.13:39500 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.785390795Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 진천"}
{"@timestamp":"2025-06-23T01:51:39.786068358Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 이천"}
{"@timestamp":"2025-06-23T01:51:39.786286147Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[fe94a32a-1, L:/172.19.0.13:39666 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.786958211Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[c85169ee-1, L:/172.19.0.13:39522 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.787177299Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 경주"}
{"@timestamp":"2025-06-23T01:51:39.787965157Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[b3c142df-1, L:/172.19.0.13:39694 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.787890461Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 원주"}
{"@timestamp":"2025-06-23T01:51:39.789744161Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 통영"}
{"@timestamp":"2025-06-23T01:51:39.790271633Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[e5df909c-1, L:/172.19.0.13:39542 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.791340176Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[db6c1c38-1, L:/172.19.0.13:39710 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.792327123Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 목포"}
{"@timestamp":"2025-06-23T01:51:39.792508313Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 동해"}
{"@timestamp":"2025-06-23T01:51:39.794075429Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[6d52b901-1, L:/172.19.0.13:39584 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.795171771Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 세종"}
{"@timestamp":"2025-06-23T01:51:39.796758286Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[77b86cf0-1, L:/172.19.0.13:39614 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.79779303Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 창원"}
{"@timestamp":"2025-06-23T01:51:39.798648984Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[7686d1a1-1, L:/172.19.0.13:39642 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.799490539Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 제주"}
{"@timestamp":"2025-06-23T01:51:39.800390691Z","level":"WARN","logger_name":"reactor.netty.http.client.HttpClientConnect","message":"[1af29c45-1, L:/172.19.0.13:39670 ! R:fastapi-container/172.19.0.6:8000] The connection observed an error"}
{"@timestamp":"2025-06-23T01:51:39.801283143Z","level":"ERROR","logger_name":"com.example.Triple_clone.service.accommodation.ScraperBatchService","message":"❌ 크롤링 중 예외 발생: 삼척"}
{"@timestamp":"2025-06-23T01:51:41.825838693Z","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-06-23T01:51:41.830068039Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-06-23T01:51:45.65442905Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
